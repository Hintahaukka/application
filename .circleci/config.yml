version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
jobs:
  build-android:
    docker:
      - image: circleci/android:api-26-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          yes | sdkmanager --licenses || exit 0
      - run: 
          yes | sdkmanager --update || exit 0
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run UnitTests
          command: ./gradlew build jacocoTestReport assembleAndroidTest
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results  
#      - run:
 #         name: Setup emulator
  #        command: sdkmanager "system-images;android-26;google_apis;x86" && echo "no" | avdmanager create avd -n test -k "system-images;android-26;google_apis;x86"
      - run:
          name: Launch emulator
   #       command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel auto -verbose
          command: emulator -avd circleci-android22 -no-audio -no-window
            background: true
            parallel: true
      - run:
          name: Wait emulator
          command: |
            # wait for it to have booted
            circle-android wait-for-boot
            # unlock the emulator screen
            sleep 30
            adb shell input keyevent 82
      - run:
          name: Run EspressoTests
          command: ./gradlew connectedDemoDebugAndroidTest
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
      - run:
          name: Upload Coverage Results
          command: |
            curl -s https://codecov.io/bash | bash -s --\
              -t $CODECOV_TOKEN \
              -n $CIRCLE_BUILD_NUM \
              -Z || echo 'Codecov upload failed'
# See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
workflows:
  version: 2
  workflow:
    jobs:
      - build-android
